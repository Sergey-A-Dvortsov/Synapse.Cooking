<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>StockSharp.OpenECry</name>
  </assembly>
  <members>
    <member name="T:StockSharp.OpenECry.OpenECryMessageAdapter">
      <summary>Адаптер сообщений для OpenECry.</summary>
    </member>
    <member name="M:StockSharp.OpenECry.OpenECryMessageAdapter.#ctor(Ecng.Common.IdGenerator)">
      <summary>Создать <see cref="T:StockSharp.OpenECry.OpenECryMessageAdapter" />.</summary>
      <param name="transactionIdGenerator">Генератор транзакций.</param>
    </member>
    <member name="F:StockSharp.OpenECry.OpenECryMessageAdapter.DefaultUuid">
      <summary>Идентификатор ПО.</summary>
    </member>
    <member name="M:StockSharp.OpenECry.OpenECryMessageAdapter.CreateOrderCondition">
      <summary>Создать для заявки типа <see cref="F:StockSharp.Messages.OrderTypes.Conditional" /> условие, которое поддерживается подключением.</summary>
      <returns>Условие для заявки. Если подключение не поддерживает заявки типа <see cref="F:StockSharp.Messages.OrderTypes.Conditional" />, то будет возвращено <see langword="null" />.</returns>
    </member>
    <member name="P:StockSharp.OpenECry.OpenECryMessageAdapter.SecurityLookupRequired">
      <summary>Требуется ли дополнительное сообщение <see cref="T:StockSharp.Messages.SecurityLookupMessage" /> для получения списка инструментов.</summary>
    </member>
    <member name="P:StockSharp.OpenECry.OpenECryMessageAdapter.IsSupportNativePortfolioLookup">
      <summary>Поддерживается ли торговой системой поиск портфелей.</summary>
    </member>
    <member name="P:StockSharp.OpenECry.OpenECryMessageAdapter.IsSupportNativeSecurityLookup">
      <summary>Поддерживается ли торговой системой поиск инструментов.</summary>
    </member>
    <member name="M:StockSharp.OpenECry.OpenECryMessageAdapter.OnSendInMessage(StockSharp.Messages.Message)">
      <summary>Отправить сообщение.</summary>
      <param name="message">Сообщение.</param>
    </member>
    <member name="P:StockSharp.OpenECry.OpenECryMessageAdapter.SecurityExtendedFields">
      <summary>Название полей расширенной информации в <see cref="T:StockSharp.Messages.SecurityMessage" />.</summary>
    </member>
    <member name="P:StockSharp.OpenECry.OpenECryMessageAdapter.Address">
      <summary>Адрес API сервера OpenECry. По-умолчанию равен <see cref="F:StockSharp.OpenECry.OpenECryAddresses.Api" />.</summary>
    </member>
    <member name="P:StockSharp.OpenECry.OpenECryMessageAdapter.Login">
      <summary>Логин.</summary>
    </member>
    <member name="P:StockSharp.OpenECry.OpenECryMessageAdapter.Password">
      <summary>Пароль.</summary>
    </member>
    <member name="P:StockSharp.OpenECry.OpenECryMessageAdapter.Uuid">
      <summary>Уникальный идентификатор программного обеспечения.</summary>
    </member>
    <member name="P:StockSharp.OpenECry.OpenECryMessageAdapter.Remoting">
      <summary>Требуемый режим подключения к терминалу. По умолчанию <see cref="F:StockSharp.OpenECry.OpenECryRemoting.None" />.</summary>
    </member>
    <member name="P:StockSharp.OpenECry.OpenECryMessageAdapter.UseNativeReconnect">
      <summary>Использовать "родной" механизм восстановления соединения. По умолчанию включено.</summary>
    </member>
    <member name="P:StockSharp.OpenECry.OpenECryMessageAdapter.EnableOECLogging">
      <summary>Использовать логирование OpenECry API.</summary>
    </member>
    <member name="P:StockSharp.OpenECry.OpenECryMessageAdapter.TimeFrames">
      <summary>Доступные тайм-фреймы.</summary>
    </member>
    <member name="M:StockSharp.OpenECry.OpenECryMessageAdapter.Save(Ecng.Serialization.SettingsStorage)">
      <summary>Сохранить настройки.</summary>
      <param name="storage">Хранилище настроек.</param>
    </member>
    <member name="M:StockSharp.OpenECry.OpenECryMessageAdapter.Load(Ecng.Serialization.SettingsStorage)">
      <summary>Загрузить настройки.</summary>
      <param name="storage">Хранилище настроек.</param>
    </member>
    <member name="T:StockSharp.OpenECry.OpenECryRemoting">
      <summary>Режимы подключения к терминалу. Описание функциональности http://www.openecry.com/api/OECAPIRemoting.pdf.</summary>
    </member>
    <member name="F:StockSharp.OpenECry.OpenECryRemoting.None">
      <summary>Отключен.</summary>
    </member>
    <member name="F:StockSharp.OpenECry.OpenECryRemoting.Primary">
      <summary>Если существует другое подключение с теми же Login/Password, оно может быть разорвано.</summary>
    </member>
    <member name="F:StockSharp.OpenECry.OpenECryRemoting.Secondary">
      <summary>Попытка активировать в режиме <see cref="F:StockSharp.OpenECry.OpenECryRemoting.Secondary" />, в случае неудачи - режим <see cref="F:StockSharp.OpenECry.OpenECryRemoting.None" />.</summary>
    </member>
    <member name="T:StockSharp.OpenECry.OpenECryAddresses">
      <summary>Адреса серверов системы OpenECry.</summary>
    </member>
    <member name="F:StockSharp.OpenECry.OpenECryAddresses.DefaultPort">
      <summary>Порт сервера по умолчанию, равный 9200.</summary>
    </member>
    <member name="F:StockSharp.OpenECry.OpenECryAddresses.Api">
      <summary>API сервер. Адрес api.gainfutures.com, порт 9200.</summary>
    </member>
    <member name="F:StockSharp.OpenECry.OpenECryAddresses.Sim">
      <summary>Демо сервер. Адрес sim.gainfutures.com, порт 9200.</summary>
    </member>
    <member name="F:StockSharp.OpenECry.OpenECryAddresses.Prod">
      <summary>Боевой сервер. Адрес prod.gainfutures.com, порт 9200.</summary>
    </member>
    <member name="T:StockSharp.OpenECry.OpenECryStopType">
      <summary>Тип условия заявки OpenECry.</summary>
    </member>
    <member name="F:StockSharp.OpenECry.OpenECryStopType.StopMarket">
      <summary>После достижения стоп-цены автоматически выставляется рыночная заявка.</summary>
    </member>
    <member name="F:StockSharp.OpenECry.OpenECryStopType.StopLimit">
      <summary>После достижения стоп-цены автоматически выставляется лимитная заявка.</summary>
    </member>
    <member name="F:StockSharp.OpenECry.OpenECryStopType.TrailingStopMarket">
      <summary>Стоп-цена автоматически следует за рынком, но только в выгодном для позиции направлении, оставаясь на заранее заявленном интервале от рыночной цены. В случае, если рынок достигает стоп-цены, автоматически выставляется рыночная заявка.</summary>
    </member>
    <member name="F:StockSharp.OpenECry.OpenECryStopType.TrailingStopLimit">
      <summary>Как <see cref="F:StockSharp.OpenECry.OpenECryStopType.TrailingStopMarket" />, но при достижении стоп-цены выставляется лимитная заявка.</summary>
    </member>
    <member name="F:StockSharp.OpenECry.OpenECryStopType.MarketOnClose">
      <summary>Исполнить по рыночной цене, если цена закрытия превысила ожидаемую цену.</summary>
    </member>
    <member name="F:StockSharp.OpenECry.OpenECryStopType.MarketIfTouched">
      <summary>С рыночной ценой при исполнении условия.</summary>
    </member>
    <member name="F:StockSharp.OpenECry.OpenECryStopType.MarketOnOpen">
      <summary>По открытию торгов.</summary>
    </member>
    <member name="T:StockSharp.OpenECry.OpenECryOrderCondition">
      <summary>Условие заявок, специфичных для <see cref="N:StockSharp.OpenECry" />.</summary>
    </member>
    <member name="M:StockSharp.OpenECry.OpenECryOrderCondition.#ctor">
      <summary>Создать <see cref="T:StockSharp.OpenECry.OpenECryOrderCondition" />.</summary>
    </member>
    <member name="P:StockSharp.OpenECry.OpenECryOrderCondition.StopType">
      <summary>Тип стопа.</summary>
    </member>
    <member name="P:StockSharp.OpenECry.OpenECryOrderCondition.StopPrice">
      <summary>Стоп-цена.</summary>
    </member>
    <member name="P:StockSharp.OpenECry.OpenECryOrderCondition.Delta">
      <summary>Trailing стоп следует за рынком если изменение цены больше чем Delta.</summary>
    </member>
    <member name="P:StockSharp.OpenECry.OpenECryOrderCondition.IsPercentDelta">
      <summary>
        <see langword="true" />, если <see cref="P:StockSharp.OpenECry.OpenECryOrderCondition.Delta" /> выражена в процентах.</summary>
    </member>
    <member name="P:StockSharp.OpenECry.OpenECryOrderCondition.TriggerType">
      <summary>Поле срабатывания.</summary>
    </member>
    <member name="P:StockSharp.OpenECry.OpenECryOrderCondition.ReferencePrice">
      <summary>Trailing стоп начинает слежение, как только цена достигает ReferencePrice.</summary>
    </member>
    <member name="P:StockSharp.OpenECry.OpenECryOrderCondition.SplitVolume">
      <summary>Разбивать объем заявки.</summary>
    </member>
    <member name="T:StockSharp.OpenECry.OpenECryException">
      <summary>Исключение, генерируемое реализацией <see cref="T:StockSharp.OpenECry.OpenECryTrader" /> в случае возникновения ошибок.</summary>
    </member>
    <member name="T:StockSharp.OpenECry.OpenECryTrader">
      <summary>Реализация интерфейса <see cref="T:StockSharp.BusinessEntities.IConnector" />, предоставляющая подключение к брокеру OEC.</summary>
    </member>
    <member name="M:StockSharp.OpenECry.OpenECryTrader.#ctor">
      <summary>Создать <see cref="T:StockSharp.OpenECry.OpenECryTrader" />.</summary>
    </member>
    <member name="P:StockSharp.OpenECry.OpenECryTrader.Uuid">
      <summary>Уникальный идентификатор программного обеспечения.</summary>
    </member>
    <member name="P:StockSharp.OpenECry.OpenECryTrader.Login">
      <summary>Логин.</summary>
    </member>
    <member name="P:StockSharp.OpenECry.OpenECryTrader.Password">
      <summary>Пароль.</summary>
    </member>
    <member name="P:StockSharp.OpenECry.OpenECryTrader.RemotingRequired">
      <summary>Требуемый режим подключения к терминалу. По умолчанию <see cref="F:StockSharp.OpenECry.OpenECryRemoting.None" />.</summary>
    </member>
    <member name="P:StockSharp.OpenECry.OpenECryTrader.UseNativeReconnect">
      <summary>Использовать "родной" механизм восстановления соединения. По умолчанию включено.</summary>
    </member>
    <member name="P:StockSharp.OpenECry.OpenECryTrader.Address">
      <summary>Адрес API сервера OpenECry. По-умолчанию равен <see cref="F:StockSharp.OpenECry.OpenECryAddresses.Api" />.</summary>
    </member>
    <member name="P:StockSharp.OpenECry.OpenECryTrader.EnableOECLogging">
      <summary>Использовать логирование библиотеки OEC.</summary>
    </member>
    <member name="M:StockSharp.OpenECry.OpenECryTrader.SendMessage(System.String,System.String)">
      <summary>Отправить сообщение другому пользователю.</summary>
      <param name="userName">Имя получателя.</param>
      <param name="text">Текст сообщения.</param>
    </member>
    <member name="E:StockSharp.OpenECry.OpenECryTrader.NewCandles">
      <summary>Событие появления новых свечек, полученных после подписки через <see cref="M:StockSharp.OpenECry.OpenECryTrader.SubscribeCandles(StockSharp.Algo.Candles.CandleSeries,System.DateTimeOffset,System.DateTimeOffset)" />.</summary>
    </member>
    <member name="E:StockSharp.OpenECry.OpenECryTrader.Stopped">
      <summary>Событие окончания обработки серии.</summary>
    </member>
    <member name="M:StockSharp.OpenECry.OpenECryTrader.SubscribeCandles(StockSharp.Algo.Candles.CandleSeries,System.DateTimeOffset,System.DateTimeOffset)">
      <summary>Подписаться на получение свечек.</summary>
      <param name="series">Серия свечек.</param>
      <param name="from">Начальная дата, с которой необходимо получать данные.</param>
      <param name="to">Конечная дата, до которой необходимо получать данные.</param>
    </member>
    <member name="M:StockSharp.OpenECry.OpenECryTrader.UnSubscribeCandles(StockSharp.Algo.Candles.CandleSeries)">
      <summary>Остановить подписку получения свечек, ранее созданную через <see cref="M:StockSharp.OpenECry.OpenECryTrader.SubscribeCandles(StockSharp.Algo.Candles.CandleSeries,System.DateTimeOffset,System.DateTimeOffset)" />.</summary>
      <param name="series">Серия свечек.</param>
    </member>
    <member name="M:StockSharp.OpenECry.OpenECryTrader.OnProcessMessage(StockSharp.Messages.Message)">
      <summary>Обработать сообщение.</summary>
      <param name="message">Сообщение.</param>
    </member>
    <member name="T:StockSharp.OpenECry.Xaml.OpenECryAddressComboBox">
      <summary>Выпадающий список для выбора адреса сервера OpenECry.</summary>
    </member>
    <member name="M:StockSharp.OpenECry.Xaml.OpenECryAddressComboBox.#ctor">
      <summary>Создать <see cref="T:StockSharp.OpenECry.Xaml.OpenECryAddressComboBox" />.</summary>
    </member>
    <member name="T:StockSharp.OpenECry.Xaml.OpenECryEndPointEditor">
      <summary>
        <see cref="T:Ecng.Xaml.DevExp.ItemsSourceEditSettings" /> для <see cref="T:StockSharp.OpenECry.Xaml.OpenECryAddressComboBox" />.</summary>
    </member>
    <member name="M:StockSharp.OpenECry.Xaml.OpenECryEndPointEditor.#ctor">
      <summary>Создать <see cref="T:StockSharp.OpenECry.Xaml.OpenECryEndPointEditor" />.</summary>
    </member>
  </members>
</doc>