<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>StockSharp.ETrade</name>
  </assembly>
  <members>
    <member name="T:StockSharp.ETrade.Native.AccountListResponse">
      <summary>Ответ на запрос accountlist.</summary>
    </member>
    <member name="T:StockSharp.ETrade.Native.AccountInfo">
      <summary>Информация о счете.</summary>
    </member>
    <member name="T:StockSharp.ETrade.Native.AccountPositionsResponse">
      <summary>Ответ на запрос accountpositions.</summary>
    </member>
    <member name="T:StockSharp.ETrade.Native.PositionInfo">
      <summary>Информация о позиции.</summary>
    </member>
    <member name="T:StockSharp.ETrade.Native.ProductId">
      <summary>Информация об инструменте позиции.</summary>
    </member>
    <member name="T:StockSharp.ETrade.Native.GetOrderListResponse">
      <summary>ETrade ответ на запрос OrderList.</summary>
    </member>
    <member name="T:StockSharp.ETrade.Native.OrderListResponse">
      <summary>ETrade ответ на запрос OrderList.</summary>
    </member>
    <member name="T:StockSharp.ETrade.Native.OrderDetails">
      <summary>Контейнер для данных заявки ETrade.</summary>
    </member>
    <member name="T:StockSharp.ETrade.Native.LegDetails">
      <summary>Нога заявки ETrade.</summary>
    </member>
    <member name="T:StockSharp.ETrade.Native.SymbolInfo">
      <summary>Информация об инструменте в ответе ETrade на запрос ProductLookup.</summary>
    </member>
    <member name="T:StockSharp.ETrade.Native.Order">
      <summary>Информация о заявке ETrade в формате, используемом в OrderListResponse.</summary>
    </member>
    <member name="T:StockSharp.ETrade.Native.OrderRequestBase">
      <summary>Базовый класс для запросов на создание/изменение заявки ETrade.</summary>
    </member>
    <member name="T:StockSharp.ETrade.Native.EquityOrderRequest">
      <summary>Запрос на создание заявки ETrade.</summary>
    </member>
    <member name="T:StockSharp.ETrade.Native.PlaceEquityOrderResponse">
      <summary>Ответ на запрос о создании заявки ETrade.</summary>
    </member>
    <member name="T:StockSharp.ETrade.Native.PlaceEquityOrderResponse2">
      <summary>Ответ на запрос о создании заявки ETrade.</summary>
    </member>
    <member name="T:StockSharp.ETrade.Native.PlaceOrderResponseMessage">
      <summary>Текстовое сообщение ТС ETrade о деталях создания/изменения заявки.</summary>
    </member>
    <member name="T:StockSharp.ETrade.Native.changeEquityOrderRequest">
      <summary>Запрос на изменение заявки ETrade.</summary>
    </member>
    <member name="T:StockSharp.ETrade.Native.placeChangeEquityOrderResponse">
      <summary>Ответ на запрос об изменении заявки ETrade.</summary>
    </member>
    <member name="T:StockSharp.ETrade.Native.cancelOrderRequest">
      <summary>Запрос на отмену заявки ETrade.</summary>
    </member>
    <member name="T:StockSharp.ETrade.Native.cancelOrderResponse">
      <summary>Ответ на запрос об отмене заявки ETrade.</summary>
    </member>
    <member name="T:StockSharp.ETrade.Native.CancelOrderResponse2">
      <summary>Ответ на запрос об отмене заявки ETrade.</summary>
    </member>
    <member name="T:StockSharp.ETrade.Native.productLookupResponse">
      <summary>ETrade ответ на запрос ProductLookup.</summary>
    </member>
    <member name="T:StockSharp.ETrade.Native.ProductInfo">
      <summary>Информация об инструменте в ответе ETrade на запрос ProductLookup.</summary>
    </member>
    <member name="T:StockSharp.ETrade.Native.OAuthToken">
      <summary>Token. Используется в процедуре авторизации OAuth 1.0a.</summary>
    </member>
    <member name="M:StockSharp.ETrade.Native.OAuthToken.#ctor(System.String,System.String,System.String)">
      <summary>Создать <see cref="T:StockSharp.ETrade.Native.OAuthToken" />.</summary>
      <param name="consumerKey">Consumer key.</param>
      <param name="token">Token.</param>
      <param name="secret">Secret.</param>
    </member>
    <member name="P:StockSharp.ETrade.Native.OAuthToken.ConsumerKey">
      <summary>Consumer key.</summary>
    </member>
    <member name="P:StockSharp.ETrade.Native.OAuthToken.Token">
      <summary>Token.</summary>
    </member>
    <member name="P:StockSharp.ETrade.Native.OAuthToken.Secret">
      <summary>Secret.</summary>
    </member>
    <member name="M:StockSharp.ETrade.Native.OAuthToken.Serialize">
      <summary>Сериализация токена.</summary>
      <returns>Строка с сериализованным токеном.</returns>
    </member>
    <member name="M:StockSharp.ETrade.Native.OAuthToken.Deserialize(System.String)">
      <summary>Десериализация токена.</summary>
      <returns>Token.</returns>
    </member>
    <member name="T:StockSharp.ETrade.ETradeMessageAdapter">
      <summary>Адаптер сообщений для ETrade.</summary>
    </member>
    <member name="P:StockSharp.ETrade.ETradeMessageAdapter.IsSupportNativeSecurityLookup">
      <summary>Поддерживается ли торговой системой поиск инструментов.</summary>
    </member>
    <member name="M:StockSharp.ETrade.ETradeMessageAdapter.#ctor(Ecng.Common.IdGenerator)">
      <summary>Создать <see cref="T:StockSharp.ETrade.ETradeMessageAdapter" />.</summary>
      <param name="transactionIdGenerator">Генератор транзакций.</param>
    </member>
    <member name="P:StockSharp.ETrade.ETradeMessageAdapter.SecurityLookupRequired">
      <summary>Требуется ли дополнительное сообщение <see cref="T:StockSharp.Messages.SecurityLookupMessage" /> для получения списка инструментов.</summary>
    </member>
    <member name="M:StockSharp.ETrade.ETradeMessageAdapter.CreateOrderCondition">
      <summary>Создать для заявки типа <see cref="F:StockSharp.Messages.OrderTypes.Conditional" /> условие, которое поддерживается подключением.</summary>
      <returns>Условие для заявки. Если подключение не поддерживает заявки типа <see cref="F:StockSharp.Messages.OrderTypes.Conditional" />, то будет возвращено <see langword="null" />.</returns>
    </member>
    <member name="M:StockSharp.ETrade.ETradeMessageAdapter.OnSendInMessage(StockSharp.Messages.Message)">
      <summary>Отправить входящее сообщение.</summary>
      <param name="message">Сообщение.</param>
    </member>
    <member name="M:StockSharp.ETrade.ETradeMessageAdapter.SetCustomAuthorizationMethod(System.Action{System.String})">
      <summary>Установить свой метод авторизации (по-умолчанию запускается браузер).</summary>
      <param name="method">Метод, принимающий в качестве параметра URL, по которому происходит авторизация на сайте ETrade.</param>
    </member>
    <member name="P:StockSharp.ETrade.ETradeMessageAdapter.ConsumerKey">
      <summary>Ключ.</summary>
    </member>
    <member name="P:StockSharp.ETrade.ETradeMessageAdapter.ConsumerSecret">
      <summary>Secret.</summary>
    </member>
    <member name="P:StockSharp.ETrade.ETradeMessageAdapter.Sandbox">
      <summary>Демо режим.</summary>
    </member>
    <member name="P:StockSharp.ETrade.ETradeMessageAdapter.AccessToken">
      <summary>OAuth access token. Нужен для восстановления соединения по упрощенной процедуре. Сохраненный AccessToken может быть использован до полуночи по EST.</summary>
    </member>
    <member name="P:StockSharp.ETrade.ETradeMessageAdapter.VerificationCode">
      <summary>Код верификации, полученный пользователем в браузере после подтверждения разрешения на работу приложения.</summary>
    </member>
    <member name="P:StockSharp.ETrade.ETradeMessageAdapter.IsValid">
      <summary>Проверить введенные параметры на валидность.</summary>
    </member>
    <member name="M:StockSharp.ETrade.ETradeMessageAdapter.Load(Ecng.Serialization.SettingsStorage)">
      <summary>Загрузить настройки.</summary>
      <param name="storage">Хранилище настроек.</param>
    </member>
    <member name="M:StockSharp.ETrade.ETradeMessageAdapter.Save(Ecng.Serialization.SettingsStorage)">
      <summary>Сохранить настройки.</summary>
      <param name="storage">Хранилище настроек.</param>
    </member>
    <member name="M:StockSharp.ETrade.ETradeMessageAdapter.ToString">
      <summary>Получить строковое представление.</summary>
      <returns>Строковое представление.</returns>
    </member>
    <member name="T:StockSharp.ETrade.ETradeStopTypes">
      <summary>Тип условной заявки ETrade.</summary>
    </member>
    <member name="F:StockSharp.ETrade.ETradeStopTypes.StopMarket">
      <summary>После достижения стоп-цены автоматически выставляется рыночная заявка.</summary>
    </member>
    <member name="F:StockSharp.ETrade.ETradeStopTypes.StopLimit">
      <summary>После достижения стоп-цены автоматически выставляется лимитная заявка.</summary>
    </member>
    <member name="T:StockSharp.ETrade.ETradeOrderCondition">
      <summary>Условие заявок, специфичных для <see cref="N:StockSharp.ETrade" />.</summary>
    </member>
    <member name="M:StockSharp.ETrade.ETradeOrderCondition.#ctor">
      <summary>Создать <see cref="T:StockSharp.ETrade.ETradeOrderCondition" />.</summary>
    </member>
    <member name="P:StockSharp.ETrade.ETradeOrderCondition.StopType">
      <summary>Тип стопа.</summary>
    </member>
    <member name="P:StockSharp.ETrade.ETradeOrderCondition.StopPrice">
      <summary>Стоп-цена.</summary>
    </member>
    <member name="T:StockSharp.ETrade.ETradeTrader">
      <summary>Реализация интерфейса <see cref="T:StockSharp.BusinessEntities.IConnector" /> для взаимодействия с системой ETrade.</summary>
    </member>
    <member name="P:StockSharp.ETrade.ETradeTrader.ConsumerKey">
      <summary>Ключ.</summary>
    </member>
    <member name="P:StockSharp.ETrade.ETradeTrader.ConsumerSecret">
      <summary>Secret.</summary>
    </member>
    <member name="P:StockSharp.ETrade.ETradeTrader.AccessToken">
      <summary>OAuth access token. Нужен для восстановления соединения по упрощенной процедуре. Сохраненный AccessToken может быть использован до полуночи по EST.</summary>
    </member>
    <member name="P:StockSharp.ETrade.ETradeTrader.VerificationCode">
      <summary>Код верификации, полученный пользователем в браузере после подтверждения разрешения на работу приложения.</summary>
    </member>
    <member name="P:StockSharp.ETrade.ETradeTrader.Sandbox">
      <summary>Режим sandbox.</summary>
    </member>
    <member name="M:StockSharp.ETrade.ETradeTrader.#ctor">
      <summary>Создать <see cref="T:StockSharp.ETrade.ETradeTrader" />.</summary>
    </member>
    <member name="M:StockSharp.ETrade.ETradeTrader.SetCustomAuthorizationMethod(System.Action{System.String})">
      <summary>Установить свой метод авторизации (по-умолчанию запускается браузер).</summary>
      <param name="method">Метод, принимающий в качестве параметра URL, по которому происходит авторизация на сайте ETrade.</param>
    </member>
    <member name="T:StockSharp.ETrade.Xaml.AuthDialog">
      <summary>Окно авторизации E*TRADE.</summary>
      <summary>
            AuthDialog
            </summary>
    </member>
    <member name="F:StockSharp.ETrade.Xaml.AuthDialog.VerificationCodeProperty">
      <summary>
        <see cref="T:System.Windows.DependencyProperty" /> для <see cref="P:StockSharp.ETrade.Xaml.AuthDialog.VerificationCode" />.</summary>
    </member>
    <member name="M:StockSharp.ETrade.Xaml.AuthDialog.#ctor(System.String)">
      <summary>Создать <see cref="T:StockSharp.ETrade.Xaml.AuthDialog" />.</summary>
    </member>
    <member name="P:StockSharp.ETrade.Xaml.AuthDialog.VerificationCode">
      <summary>Код верификации для продолжения процесса авторизации в системе E*TRADE.</summary>
    </member>
    <member name="M:StockSharp.ETrade.Xaml.AuthDialog.InitializeComponent">
      <summary>InitializeComponent.</summary>
    </member>
  </members>
</doc>